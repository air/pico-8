pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
-- finlayball 2.0!
-- by air
function _init()
 -- player data for attract mode
 p1 = {x=44,y=70,col=8,rad=7}
 p2 = {x=84,y=70,col=12,rad=7}
 trail1 = {}
 trail2 = {}
 -- score:grow/shrink
 score=0
 scorelimit=10
 grow = {}
 shrink = {}
 -- score:painting
 scoretime=0
 red=-1
 blue=-1
 -- animation
 coin_ticks=5
 sleep=0 -- in frames
 -- general
 debug={}
 timer = 0
 -- physics
 g = 0.2 -- gravity
 accel = 0.5 -- upward thrust
 walldecay=0.8
 ceildecay=0.6
 flrdecay=0.6
 -- difficulty
 coin_interval=13
 start_coins=7
 -- init
 coins = {}
 sparks = {}
 splode = {}
 stain = {}
 state = "attract"
 midas = false
 glint = {}
 collide = true
 showcollide = false
 -- states
 update_funcs = {
  attract = update_attract,
  play = update_play,
  gameover = update_gameover}
 draw_funcs = {
  attract = draw_attract,
  play = draw_play,
  gameover = draw_gameover}
end

function make_coin()
 local coin = {x=0, y=0, frame=0, step=0}
 coin.frame = flr(rnd(3))
 coin.step = flr(rnd(coin_ticks))
 coin.x = 5+flr(rnd(118))
 coin.y = 5+flr(rnd(118))
 return coin
end

-- will turn col2 after anim
function make_splode(x,y,rad,col2)
 local splode = {frame=0, step=0}
 splode.col = 0 -- start black
 splode.x = x
 splode.y = y
 splode.rad = rad
 splode.col2 = col2
 return splode
end

function spark(x,y,vx,vy,col,lifetime)
 if (not lifetime) lifetime=10
 local s = {}
 s.x=x s.y=y s.vx=vx s.vy=vy s.col=col
 s.age=0
 s.limit=lifetime
 s.px=x s.py=y -- previous
 add(sparks,s)
end

function reset_game()
 p1 = {x=44,y=70,vx=0,vy=0,
  col=8,rad=7,col2=2,lut=lut1}
 p2 = {x=84,y=70,vx=0,vy=0,
  col=12,rad=7,col2=1,lut=lut2}
 timer = 0
 debug={}
 coins = {}
 trail1 = {}
 trail2 = {}
 sparks = {}
 splode = {}
 stain = {}
 for c = 1,start_coins do
  add(coins, make_coin())
 end
 -- use glint.maxage for difficulty
 glint = {coin=nil,interval=180,
  maxage=25,age=0,angle=0,rad=75}
 grow = {p=nil,age=0,maxage=30}
 shrink = {p=nil,age=0,maxage=30,limit=2}
end
-->8
-- update
function _update()
 if (sleep > 0) then
  sleep -= 1
 else
  debug={}
  update_funcs[state]()
 end
end

function update_attract()
 if (btnp(‚¨ÜÔ∏è)) then
  reset_game()
  state = "play"
 end
 if (btnp(üÖæÔ∏è)) then
  if (midas) then
   midas = false
   start_coins = 4
  else
   midas = true
   start_coins = 500
  end
 end
 if (btnp(‚ùé)) then
  showcollide = true
  if (collide) then
   collide = false
  else
   collide = true
  end
 end
end

function update_sfx()
 if (glint.sfxdelay==nil) return
 if (glint.sfxdelay>0) then
  glint.sfxdelay -= 1
 else
  sfx_glint_splode()
  glint.sfxdelay=nil
 end  
end

function update_gameover()
 timer+=1
 foreach(splode, update_splode)
 foreach(sparks, update_spark)
 update_sfx()
 if (btn(‚ùé)) then
  reset_game()
  state = "attract"
 end
end

function update_play()
 timer+=1
 -- store player trail
 store_trail(p1,trail1)
 store_trail(p2,trail2)
 -- animate things
 foreach(sparks, update_spark)
 foreach(coins, update_coin)
 foreach(splode, update_splode)
 -- press buttons 1
 if (btn(‚¨ÖÔ∏è)) p1.vx -= accel
 if (btn(‚û°Ô∏è)) p1.vx += accel
 if (btn(‚¨ÜÔ∏è)) then
  p1.vy -= accel
  sfx_thrust()
  for i=1,5 do
   spark(p1.x+(3-rnd(5)),p1.y+p1.rad+rnd(2),0.5-rnd(1),2+rnd(2),rnd(p1.lut),4)
  end
 end
 if (btn(‚¨áÔ∏è)) p1.vy += accel
 -- press buttons 2
 if (btn(‚¨ÖÔ∏è,1)) p2.vx -= accel
 if (btn(‚û°Ô∏è,1)) p2.vx += accel
 if (btn(‚¨ÜÔ∏è,1)) then
  p2.vy -= accel
  sfx_thrust()
  for i=1,5 do
   spark(p2.x+(3-rnd(5)),p2.y+p2.rad+rnd(2),0.5-rnd(1),2+rnd(2),rnd(p2.lut),4)
  end
 end
 if (btn(‚¨áÔ∏è,1)) p2.vy += accel
 -- update positions
 p1.vy += g
 p1.x += p1.vx
 p1.y += p1.vy
 p2.vy += g
 p2.x += p2.vx
 p2.y += p2.vy

 spawn()
 if (collide) collide_players()
 collide_walls(p1)
 collide_walls(p2)
 collide_coins(p1)
 collide_coins(p2)
 if (#coins == 0) then
  camera()
  scoretime=timer
  state="gameover"
 end
 if (sleep==0) then
  update_score()
  update_glint()
 end
 update_sfx()
 --debug_collide()
end

function debug_collide()
 local v1=scalar(p1)
 local v2=scalar(p2)
 add(debug,"v1:"..v1)
 add(debug,"v2:"..v2)
 add(debug,"sum:"..(v1+v2))
end

function collide_players()
 if (not closer_than(p1,p2,p1.rad+p2.rad)) return
 sfx(0)
 separate_circles(p1,p2)
 local d1=get_momentum(p1,p2)
 local d2=get_momentum(p2,p1)
 --d1
 p1.vx-=d1.x
 p1.vy-=d1.y
 p2.vx+=d1.x
 p2.vy+=d1.y
 --d2
 p1.vx+=d2.x
 p1.vy+=d2.y
 p2.vx-=d2.x
 p2.vy-=d2.y
end

function update_coin(c)
 c.step += 1
 if (c.step == coin_ticks) then
  c.step = 0;
  c.frame += 1;
  if (c.frame == 3) c.frame = 0
 end
end

function update_splode(s)
 s.step += 1
 if (s.step > 0) s.col = 7
 if (s.step > 5) then
  del(splode, s)
  add(stain, {x=s.x,y=s.y,col=s.col2,rad=s.rad})
 end
end

function update_spark(s)
 s.age += 1
 if (s.age == s.limit) then
  del(sparks,s)
  return
 end
 s.px = s.x -- previous
 s.py = s.y
 s.vy += g -- gravity
 s.vx *= 0.99 -- decay vx
 s.x += s.vx
 s.y += s.vy
end

function store_trail(p,t)
 add(t, {x=p.x, y=p.y})
 if (#t == 6) del(t, t[1])
end

function spawn()
 if (timer % coin_interval == 0) then
  add(coins, make_coin())
 end 
end

function collide_coins(p)
 for coin in all(coins) do
  -- collide on rad + sprite_width/2
  if closer_than(p, coin, p.rad+4) then
   -- was this the glint coin?
   if (glint.coin == coin) then
    glint.coin=nil
    sleep=18
    glint.sfxdelay=4
    sfx_glint_pickup()
    add(splode, make_splode(coin.x,coin.y,glint.rad,p.col2))
    -- get other coins in radius
    for subcoin in all(coins) do
     if (subcoin != coin) then
      if (closer_than(coin,subcoin,glint.rad)) then
       pickup_coin(subcoin,p)
       del(coins,subcoin)
      end
     end
    end
   else
    pickup_coin(coin,p)
   end
   del(coins, coin)
  end
 end
end

-- does not del from coins!
function pickup_coin(coin,p)
 sfx_pickup(p)
 if (p == p1) then
  if (p1.rad > shrink.limit) score += 1
 else
  if (p2.rad > shrink.limit) score -= 1
 end
 for i=1,5 do spark(coin.x,coin.y,p.vx/2+(2-rnd(4)),p.vy/2+(2-rnd(4)),7, 30) end
 for i=1,5 do spark(coin.x,coin.y,p.vx/2+(2-rnd(4)),p.vy/2+(2-rnd(4)),10, 30) end
 add(splode, make_splode(coin.x,coin.y,p.rad,p.col2))
end

function collide_walls(p)
 maxright=126-p.rad
 minpos=p.rad+1
 maxbottom=124-p.rad
 -- hit right wall
 if (p.x > maxright) then
  if (p.vx > 1) then
   sfx(1)
   spark(126, p.y, -2, -2, 7)
   spark(126, p.y, -2, 1, 7)
   camera(-1,0)
  end
  p.x = maxright
  p.vx = -(p.vx * walldecay) -- decay
 end
 if (p.x < minpos) then
  if (p.vx < -1) then
   sfx(1)
   spark(2, p.y, 2, -2, 7)
   spark(2, p.y, 2, 1, 7)
   camera(1,0)
  end
  p.x = minpos
  p.vx = -(p.vx * walldecay)
 end
 -- hit ceiling
 if (p.y < minpos) then
  if (p.vy < -1) then
   sfx(1)
   spark(p.x, 2, -2, 1, 11)
   spark(p.x, 2, 2, 1, 11)
   camera(0,1)
  end
  p.y = minpos
  p.vy = -(p.vy * ceildecay)
 end
 -- hit the floor
 if (p.y > maxbottom) then
  if (p.vy > 1) then
   sfx(2)
   spark(p.x, 125, 3, -1, 10)
   spark(p.x, 125, -3, -1, 10)
   camera(0,-1)
  end
  p.y = maxbottom
  p.vy = -(p.vy * flrdecay)
 end
end

function update_glint()
 -- glint active
 if (glint.coin != nil) then
  glint.age += 1
  glint.angle += 0.002
  if (glint.angle >= 1) glint.angle=0
  if (glint.age == glint.maxage) glint.coin=nil
 -- no glint
 elseif (timer % glint.interval == 0) then
  glint.coin = choose_glint()
  glint.age=0
 end
end

function choose_glint()
 local distance = 0
 local search = 10
 local result = nil
 while (search > 0) do
  local coin = rnd(coins)
  local thisdist = dist(p1,coin)+dist(p2,coin)
  if (thisdist > distance) then
   distance = thisdist
   result = coin
  end
  search -= 1
 end
 return result
end

function update_score()
 if (score > scorelimit) then
  grow_player(p2)
  shrink_player(p1)
  sfx_grow_shrink()
  score = 0
 elseif (score < -scorelimit) then
  grow_player(p1)
  shrink_player(p2)
  sfx_grow_shrink()
  score = 0
 end
 -- update arrow positions
 if (grow.p != nil) then
  grow.age += 1
  grow.y -= 0.4
  if (grow.age > grow.maxage) grow.p = nil
 end
 if (shrink.p != nil) then
  shrink.age += 1
  shrink.y += 0.4
  if (shrink.age > shrink.maxage) shrink.p = nil
 end
end

function grow_player(p)
 p.rad += 1
 grow.p = p
 grow.x = p.x
 grow.y = p.y
 grow.age = 0
end

function shrink_player(p)
 p.rad -= 1
 shrink.p = p
 shrink.x = p.x
 shrink.y = p.y
 shrink.age = 0
end
-->8
-- draw
function _draw()
 glowindex += 1
 if (glowindex > #glowramp) glowindex = 1
 draw_funcs[state]()
end

function draw_debug()
 if (#debug>0) then
  color(7)
  for i=1,#debug do
   print(debug[i])
  end
 end
end

-- glowing things
glowramp = {7,8,12}
glowindex = 1
-- look up table for trails
lut1 = {8,9,15,10,7,8}
lut2 = {3,12,11,10,7,12}

function draw_attract()
 cls(0)
 draw_boundary()
 draw_player(p1,trail1)
 draw_player(p2,trail2)
 color(glowramp[glowindex])
 print("\n\n      ‚òÖ finlayball 2! ‚òÖ")
 color(15)
 print("\n     collect all the coins.")
 print("\n     \f8red:‚¨ÜÔ∏è‚¨áÔ∏è‚¨ÖÔ∏è‚û°Ô∏è \fcblue:edsf")
 color(7)
 print("\n   press up arrow \148 to start")
 color(flr(rnd(16)))
 if (midas) print("midas mode",45,90)
 if (showcollide) then
  local str=""
  if (collide) then str="on"
  else str="off"
  end
  print("collide:"..str,45,100)
 end
end

function draw_boundary()
 -- ceiling
 line(0,0,127,0,3)
 -- walls
 line(0,0,0,127,15)
 line(127,0,127,127,15)
 rectfill(0,125,127,127,9)
end

function draw_gameover()
 cls(0)
 foreach(stain, draw_stain)
 foreach(splode, draw_splode)
 if (#splode==0 and #sparks==0 and red==-1) score_gameover()
 draw_sparks()
 draw_boundary()
 draw_player(p1,trail1)
 draw_player(p2,trail2)
 local redscore="..."
 local bluescore="..."
 if (red>-1) redscore=red
 if (blue>-1) bluescore=blue
 color(glowramp[glowindex])
 print("\n\n    you did it!")
 print("\n\n    \f7your time: "..scoretime)
 print("\n    \f8red:  "..redscore) 
 print("\n    \fcblue: "..bluescore) 
 print("\n\n    \f7press ‚ùé to restart")
end

function score_gameover()
 red=0
 blue=0
 for x=0,127 do
  for y=0,127 do
   local col=pget(x,y)
   if (col==p1.col2) red+=1
   if (col==p2.col2) blue+=1
  end
 end
end

function draw_sparks()
 for s in all(sparks) do
  --pset(s.x, s.y, s.col)
  line(s.px, s.py, s.x, s.y, s.col)
 end
end

function draw_play()
 cls(0)
 foreach(stain, draw_stain)
 foreach(splode, draw_splode)
 draw_sparks()
 draw_boundary()
 foreach(coins,draw_coin)
 draw_glint()
 draw_player(p1,trail1)
 draw_player(p2,trail2)
 -- reset the camera
 camera()
 draw_score()
 draw_debug()
end

function draw_player(p,t)
 -- line trail
 for i=1,#t do
  if (i == #t) then
   line(p.x, p.y, t[i].x, t[i].y, p.lut[i])
  else
   line(t[i+1].x, t[i+1].y, t[i].x, t[i].y, p.lut[i])
  end
 end
 -- ball
 circfill(p.x,p.y,p.rad,p.col)
 -- highlight
 if (p.rad==2) circfill(p.x+1,p.y-1,0,7)
 if (p.rad==3) circfill(p.x+1,p.y-1,0,7)
 if (p.rad==4) circfill(p.x+1,p.y-1,1,7)
 if (p.rad==5) circfill(p.x+1,p.y-1,2,7)
 if (p.rad==6) circfill(p.x+2,p.y-2,2,7)
 if (p.rad==7) circfill(p.x+2,p.y-2,2,7)
 if (p.rad==8) circfill(p.x+2,p.y-2,2,7)
 if (p.rad==9) circfill(p.x+2,p.y-2,3,7)
 if (p.rad==10) circfill(p.x+2,p.y-2,3,7)
 if (p.rad==11) circfill(p.x+2,p.y-2,3,7)
 if (p.rad>=12) circfill(p.x+2,p.y-2,4,7)
 -- shadow
 line(p.x-(p.rad/1.5),125,p.x+(p.rad/1.5),125,0)
end

function draw_coin(c)
 spr(3+c.frame, c.x-4, c.y-4)
 -- shadow
 line(c.x-2, 125, c.x+1, 125, 0)
end

function draw_splode(s)
 circfill(s.x, s.y, s.rad, s.col)
end

function draw_stain(s)
 circfill(s.x, s.y, s.rad, s.col)
end

function draw_glint()
 if (glint.coin == nil) return
 local gx=glint.coin.x
 local gy=glint.coin.y-1
 fillp(0b0101101001011010.1)
 -- circle
 circ(gx, gy, 13, glowramp[glowindex])
 fillp(0)
 local cosg=cos(glint.angle)
 local sing=sin(glint.angle)
 local cosg2=cos(glint.angle-0.25)
 local sing2=sin(glint.angle-0.25)
 -- long line
 local x1=cosg*20
 local y1=sing*20
 fillp(0b0101101001011010.1)
 line(gx-x1,gy-y1,gx+x1,gy+y1,glowramp[glowindex])
 -- short line
 local x1=cosg2*7
 local y1=sing2*7
 line(gx-x1,gy-y1,gx+x1,gy+y1,glowramp[glowindex])
 fillp(0)
 -- white center
 circfill(gx,gy,2,7)
end

function draw_score()
 pal(7,glowramp[glowindex])
 if (grow.p != nil) then
  spr(7, grow.x-4, grow.y-4)
 end
 if (shrink.p != nil) then
  spr(7, shrink.x-4, shrink.y-4,1,1,false,true)
 end
 pal()
 --print("\n \f7"..score)
 -- 1 24
 if (score > 8) then spr(33,24,5)
 else spr (49,24,5) end
 -- 2 32
 if (score > 6) then spr(34,32,5)
 else spr (51,32,5) end
 -- 3 40
 if (score > 4) then spr(34,40,5)
 else spr (51,40,5) end
 -- 4 48
 if (score > 2) then spr(34,48,5)
 else spr (51,48,5) end
 -- 5 56
 if (score > 0) then spr(34,56,5)
 else spr (54,56,5) end
 -- 6 64
 if (score < 0) then spr(35,64,5)
 else spr (55,64,5) end
 -- 7 72
 if (score < -2) then spr(35,72,5)
 else spr (51,72,5) end
 -- 8 80
 if (score < -4) then spr(35,80,5)
 else spr (51,80,5) end
 -- 9 88
 if (score < -6) then spr(35,88,5)
 else spr (51,88,5) end
 --10 96
 if (score < -8) then spr(36,96,5)
 else spr (52,96,5) end
end
-->8
-- sfx
function sfx_pickup(p)
 if (p == p1) sfx(7)
 if (p == p2) sfx(8)
end

function sfx_thrust()
 sfx(3)
end

function sfx_glint_pickup()
 sfx(4)
 --sfx(5)
end

function sfx_glint_splode()
 sfx(6)
 sfx(9)
 sfx(11)
end

function sfx_grow_shrink()
 sfx(10)
end
-->8
-- maths
function dist(a,b)
 local dx = a.x - b.x
 local dy = a.y - b.y
 return sqrt((dx*dx)+(dy*dy))
end

function scalar(mover)
 local origin={x=0,y=0}
 return dist(origin,{x=mover.vx,y=mover.vy})
end

function separate_circles(c1,c2)
 local centerdist=dist(c1,c2)
 --add(debug,"centerdist "..centerdist)
 
 -- 1.get intersection distance
 local intersect=centerdist-c1.rad-c2.rad
 --add(debug,"intersect "..intersect)
 
 -- 2.move apart
 local movedist=intersect/-2
 -- move a lil more to look good
 movedist += 0.5
 --add(debug,"move "..movedist)
 
 local scale=movedist/centerdist
 --add(debug,"scale "..scale)
 c1.x += (c2.x-c1.x) * -scale
 c1.y += (c2.y-c1.y) * -scale  
 c2.x += (c1.x-c2.x) * -scale
 c2.y += (c1.y-c2.y) * -scale

 intersect=dist(c1,c2)-c1.rad-c2.rad
 --add(debug,"new intersect "..intersect)
end

-- when c1 hits c2, what's the
-- vx,vy to apply to both. add
-- to c2, subtract from c1.
function get_momentum(c1,c2)
 local dx=c2.x-c1.x
 local dy=c1.y-c2.y
 local angletoc2=atan2(dx,dy)
 --add(debug,"angle to c2:"..angletoc2)
 local c1direction=atan2(c1.vx,-c1.vy)
 --add(debug,"c1direction:"..c1direction) 
 local relativeangletoc2=angletoc2-c1direction
 if (relativeangletoc2<0) relativeangletoc2+=1
 --add(debug,"relativeangletoc2:"..relativeangletoc2)

 -- only transfer momentum to front
 local result={x=0,y=0}
 if (relativeangletoc2>0.5 or relativeangletoc2<0.25) then
  -- proportion of velocity to transfer
  local proportion=cos(relativeangletoc2)
  --add(debug,"proportion:"..proportion)
  -- magnitude
  local magnitude=scalar(c1)
  magnitude*=proportion
  --add(debug,"magnitude:"..magnitude)
  -- x and y components
  local pushx=cos(angletoc2)*magnitude
  --add(debug,"pushx:"..pushx)
  local pushy=-sin(angletoc2)*magnitude
  --add(debug,"pushy:"..pushy)
  result={x=pushx,y=pushy}
 end
 return result
end

function closer_than(a,b,d)
 local dx = a.x - b.x
 local dy = a.y - b.y
 -- fast check
 if abs(dx) < d and abs(dy) < d then
  -- precise check
  if dx*dx + dy*dy < d*d then
   return true
  end  
 end
 return false
end


-->8
-- ideas for juice

-- size particles on age
-- more juice in the bomb
-- teamwork rating/bonus for even score
__gfx__
000000000000000000000000000a7000000a70000007700000000000000770000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000aaa700000aa0000007700000000000007007000000000000000000000000000000000000000000000000000000000000000000
0070070000000000000000000aaaaa7000aaa7000077770000000000070000700000000000000000000000000000000000000000000000000000000000000000
0007700000000000000000000aaaaaa000aaaa000077770000000000700000070000000000000000000000000000000000000000000000000000000000000000
0007700000000000000000000aaaaaa000aaaa0000a7770000000000777007770000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000009aaaaa0009aaa000097770000000000007007000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000009aaa00000aa000000a700000000000007007000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000009a0000009a0000009a00000000000007777000000000000000000000000000000000000000000000000000000000000000000
000000000288888888888888cccccccccccccc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000288777777777777777777777777777c10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000008888888888888888cccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000002888888888888888ccccccccccccccc10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000002222222222222211111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000005dddddddddddddddddddddddddddd500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000005d8777777777777777777777777777750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000d888888888888888cccccccccccccccd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000005d88888888888888ccccccccccccccd50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055555555555555555555555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000005dddddd00000000dddddddddddddd5000000000dddddddddddddddd0000000000000000000000000000000000000000000000000000000000000000
000000005d0000000000000000000000000000750000000000000007700000000000000000000000000000000000000000000000000000000000000000000000
00000000d000000000000000000000000000000d0000000000000008c00000000000000000000000000000000000000000000000000000000000000000000000
000000005d0000000000000000000000000000d50000000000000008c00000000000000000000000000000000000000000000000000000000000000000000000
00000000055555550000000055555555555555500000000055555555555555550000000000000000000000000000000000000000000000000000000000000000
__label__
f333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000007000000007770777077007000777070707770777070007000000077700700000000070000000000000000000000000000000f
f000000000000000000000000077700000007000070070707000707070707070707070007000000000700700000000777000000000000000000000000000000f
f000000000000000000000007777777000007700070070707000777077707700777070007000000077700700000077777770000000000000000000000000000f
f000000000000000000000000777770000007000070070707000707000707070707070007000000070000000000007777700000000000000000000000000000f
f000000000000000000000000700070000007000777070707770707077707770707077707770000077700700000007000700000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f00000000000000000000ff00ff0f000f000fff00ff0fff00000fff0f000f0000000fff0f0f0fff000000ff00ff0fff0ff000ff000000000000000000000000f
f0000000000000000000f000f0f0f000f000f000f0000f000000f0f0f000f00000000f00f0f0f0000000f000f0f00f00f0f0f00000000000000000000000000f
f0000000000000000000f000f0f0f000f000ff00f0000f000000fff0f000f00000000f00fff0ff000000f000f0f00f00f0f0fff000000000000000000000000f
f0000000000000000000f000f0f0f000f000f000f0000f000000f0f0f000f00000000f00f0f0f0000000f000f0f00f00f0f000f000000000000000000000000f
f00000000000000000000ff0ff00fff0fff0fff00ff00f000000f0f0fff0fff000000f00f0f0fff000000ff0ff00fff0f0f0ff000f000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f00000000000000000008880888088000000088888000888880008888800088888000000ccc0c000c0c0ccc00000ccc0cc000cc0ccc00000000000000000000f
f00000000000000000008080800080800800888088808800088088800880880088800000c0c0c000c0c0c0000c00c000c0c0c000c0000000000000000000000f
f00000000000000000008800880080800000880008808800088088000880880008800000cc00c000c0c0cc000000cc00c0c0ccc0cc000000000000000000000f
f00000000000000000008080800080800800880008808880888088800880880088800000c0c0c000c0c0c0000c00c000c0c000c0c0000000000000000000000f
f00000000000000000008080888088800000088888000888880008888800088888000000ccc0ccc00cc0ccc00000ccc0ccc0cc00c0000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000007770777077700770077000007070777000007770777077700770707000000777770000007770077000000770777077707770777000000000000f
f000000000007070707070007000700000007070707000007070707070707070707000007770777000000700707000007000070070707070070000000000000f
f000000000007770770077007770777000007070777000007770770077007070707000007700077000000700707000007770070077707700070000000000000f
f000000000007000707070000070007000007070700000007070707070707070777000007700077000000700707000000070070070707070070000000000000f
f000000000007000707077707700770000000770700000007070707070707700777000000777770000000700770000007700070070707070070000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000008888800000000000000000000000000000000000ccccc0000000000000000000000000000000000000000f
f0000000000000000000000000000000000000008888888880000000000000000000000000000000ccccccccc00000000000000000000000000000000000000f
f000000000000000000000000000000000000008888888888800000000000000000000000000000ccccccccccc0000000000000000000000000000000000000f
f00000000000000000000000000000000000008888888777888000000000000000000000000000ccccccc777ccc000000000000000000000000000000000000f
f00000000000000000000000000000000000008888887777788000000000000000000000000000cccccc77777cc000000000000000000000000000000000000f
f0000000000000000000000000000000000008888888777778880000000000000000000000000ccccccc77777ccc00000000000000000000000000000000000f
f0000000000000000000000000000000000008888888777778880000000000000000000000000ccccccc77777ccc00000000000000000000000000000000000f
f0000000000000000000000000000000000008888888877788880000000000000000000000000cccccccc777cccc00000000000000000000000000000000000f
f0000000000000000000000000000000000008888888888888880000000000000000000000000ccccccccccccccc00000000000000000000000000000000000f
f0000000000000000000000000000000000008888888888888880000000000000000000000000ccccccccccccccc00000000000000000000000000000000000f
f00000000000000000000000000000000000008888888888888000000000000000000000000000ccccccccccccc000000000000000000000000000000000000f
f00000000000000000000000000000000000008888888888888000000000000000000000000000ccccccccccccc000000000000000000000000000000000000f
f000000000000000000000000000000000000008888888888800000000000000000000000000000ccccccccccc0000000000000000000000000000000000000f
f0000000000000000000000000000000000000008888888880000000000000000000000000000000ccccccccc00000000000000000000000000000000000000f
f000000000000000000000000000000000000000008888800000000000000000000000000000000000ccccc0000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
99999999999999999999999999999999999999900000000009999999999999999999999999999990000000000999999999999999999999999999999999999999
99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999

__sfx__
000100000b3600e3601136014360173601a3601b3601d3501e3501e3501f3501f3501e3501e3401e3401e3401c34019340143300f3300d3300b32009320063200432002310013100131001310013000000000000
000100001715017150171502c050171502505020050171501305001040171400104016130010300103014130010301213001430014200c1200242009120024200611005100031000110000000000000000000000
0001000004440044400544006440064400844009440094400b4400d4400e44010440115401244013440154401644018440184401a4401c4401e4201e4202142023420244102541028400294002c4003040034400
000100001062010620106201062010620106201062010620106201062010620106200f6200f6200e6200d6200d6200c6200c6200b6200a6100961008610076100661005610046100461002610016000160001600
0003000001370023700237004370053700637006370073700737008370093700b3700c3700d3700e37010370113701337015370173701a3701b3701e3702137025370283702d3703130035100006000060033100
000300000137002370033700517006270081700a0700c3700e2701017012370140701617017270191701b0701d1701f370202702117022370230702527026170280702a3702c2700060000300001000010000100
180200003d6703d6703c6703b6703a670386703667034660316602e650266501e6501965015650106500c64008640076400564004640036400363003630036300263002620026200262002610026100061000600
04040000305202d520325202f52034520005000060000600006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04040000303202d320323202f32034320003000030000300001000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020200003d6703d6703c6703b6703a670386703667034670316702e670266701e6701967015670106700c67008670076700567004670036600366003650036400264002630026300262002620026100061000600
040200001b760207601c7601276001760027600c760137601a76022760297602b7602a7601c7600b76012760237602c760377603a760367602e7602b750227501e7501e75023750297502e750357503d7503b750
020200002e6702d6702a6702867024670206701c6701b67014670186702267011670166702067012670156701c67021670186701e670176701a67021670186701b67017670146701667018670216701667012670
